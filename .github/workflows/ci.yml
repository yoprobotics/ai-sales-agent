name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: |
          npm ci
          cd apps/web && npm ci

      - name: Lint
        run: cd apps/web && npm run lint
        continue-on-error: true

  typecheck:
    name: Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: |
          npm ci
          cd apps/web && npm ci

      - name: Generate Prisma Client
        run: cd apps/web && npx prisma generate
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/test

      - name: Type check
        run: cd apps/web && npx tsc --noEmit
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/test

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [lint, typecheck]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: |
          npm ci
          cd apps/web && npm ci

      - name: Generate Prisma Client
        run: cd apps/web && npx prisma generate
        env:
          DATABASE_URL: postgresql://user:password@localhost:5432/test

      - name: Build
        run: cd apps/web && npm run build
        env:
          # Mock env vars for build
          DATABASE_URL: postgresql://user:password@localhost:5432/test
          JWT_SECRET: test-jwt-secret
          NEXT_PUBLIC_APP_URL: http://localhost:3000