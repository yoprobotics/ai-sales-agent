/** @type {import('next').NextConfig} */\nconst nextConfig = {\n  experimental: {\n    appDir: true,\n  },\n  images: {\n    domains: [\n      'localhost',\n      'avatars.githubusercontent.com',\n      'lh3.googleusercontent.com',\n      'cdn.jsdelivr.net',\n    ],\n  },\n  env: {\n    CUSTOM_KEY: process.env.CUSTOM_KEY,\n  },\n  async headers() {\n    return [\n      {\n        source: '/(.*)',\n        headers: [\n          {\n            key: 'X-Frame-Options',\n            value: 'DENY',\n          },\n          {\n            key: 'X-Content-Type-Options',\n            value: 'nosniff',\n          },\n          {\n            key: 'Referrer-Policy',\n            value: 'strict-origin-when-cross-origin',\n          },\n          {\n            key: 'Permissions-Policy',\n            value: 'camera=(), microphone=(), geolocation=()',\n          },\n        ],\n      },\n    ];\n  },\n  async redirects() {\n    return [\n      {\n        source: '/dashboard',\n        destination: '/dashboard/overview',\n        permanent: true,\n      },\n    ];\n  },\n  webpack: (config, { dev, isServer }) => {\n    // Optimize bundle size\n    if (!dev && !isServer) {\n      config.optimization.splitChunks.cacheGroups = {\n        ...config.optimization.splitChunks.cacheGroups,\n        vendor: {\n          test: /[\\/\\\\]node_modules[\\/\\\\]/,\n          name: 'vendors',\n          chunks: 'all',\n        },\n      };\n    }\n\n    return config;\n  },\n};\n\nmodule.exports = nextConfig;\n