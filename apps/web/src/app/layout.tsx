import type { Metadata } from 'next';\nimport { Inter } from 'next/font/google';\nimport { Providers } from './providers';\nimport { Toaster } from 'react-hot-toast';\nimport '../styles/globals.css';\n\nconst inter = Inter({ \n  subsets: ['latin'],\n  display: 'swap',\n  variable: '--font-inter',\n});\n\nexport const metadata: Metadata = {\n  title: {\n    default: 'AI Sales Agent | B2B Prospecting Platform',\n    template: '%s | AI Sales Agent',\n  },\n  description: 'AI-powered B2B prospecting platform with intelligent qualification, personalized messaging, and CRM pipeline management',\n  keywords: [\n    'B2B prospecting',\n    'AI sales agent', \n    'lead qualification',\n    'email sequences',\n    'CRM pipeline',\n    'sales automation',\n    'prospect qualification',\n    'personalized messaging'\n  ],\n  authors: [{ name: 'YoProbotics' }],\n  creator: 'YoProbotics',\n  publisher: 'YoProbotics',\n  robots: {\n    index: true,\n    follow: true,\n    googleBot: {\n      index: true,\n      follow: true,\n      'max-video-preview': -1,\n      'max-image-preview': 'large',\n      'max-snippet': -1,\n    },\n  },\n  openGraph: {\n    type: 'website',\n    locale: 'en_US',\n    url: 'https://app.aisalesagent.com',\n    title: 'AI Sales Agent | B2B Prospecting Platform',\n    description: 'AI-powered B2B prospecting platform with intelligent qualification, personalized messaging, and CRM pipeline management',\n    siteName: 'AI Sales Agent',\n    images: [\n      {\n        url: '/og-image.png',\n        width: 1200,\n        height: 630,\n        alt: 'AI Sales Agent',\n      },\n    ],\n  },\n  twitter: {\n    card: 'summary_large_image',\n    title: 'AI Sales Agent | B2B Prospecting Platform',\n    description: 'AI-powered B2B prospecting platform with intelligent qualification, personalized messaging, and CRM pipeline management',\n    images: ['/og-image.png'],\n    creator: '@yoprobotics',\n  },\n  icons: {\n    icon: '/favicon.ico',\n    shortcut: '/favicon-16x16.png',\n    apple: '/apple-touch-icon.png',\n  },\n  manifest: '/site.webmanifest',\n  verification: {\n    google: 'your-google-verification-code',\n  },\n};\n\nexport default function RootLayout({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  return (\n    <html lang=\"en\" className={inter.variable} suppressHydrationWarning>\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <meta name=\"theme-color\" content=\"#3b82f6\" />\n        <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\" />\n        <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossOrigin=\"anonymous\" />\n      </head>\n      <body className={`${inter.className} min-h-screen bg-background font-sans antialiased`}>\n        <Providers>\n          {children}\n          <Toaster\n            position=\"top-right\"\n            toastOptions={{\n              duration: 4000,\n              style: {\n                background: 'hsl(var(--card))',\n                color: 'hsl(var(--card-foreground))',\n                border: '1px solid hsl(var(--border))',\n              },\n              success: {\n                iconTheme: {\n                  primary: 'hsl(var(--primary))',\n                  secondary: 'hsl(var(--primary-foreground))',\n                },\n              },\n              error: {\n                iconTheme: {\n                  primary: 'hsl(var(--destructive))',\n                  secondary: 'hsl(var(--destructive-foreground))',\n                },\n              },\n            }}\n          />\n        </Providers>\n      </body>\n    </html>\n  );\n}\n